// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Stdlib_List from "./Stdlib_List.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.mjs";
import * as Stdlib_Array from "./Stdlib_Array.mjs";

function getExnWithMessage(option, message) {
  if (option !== undefined) {
    return Caml_option.valFromOption(option);
  } else {
    return Js_exn.raiseError(message);
  }
}

function optionOr(a, b) {
  if (a !== undefined) {
    return a;
  } else {
    return b;
  }
}

function arrayToMayBe(__x) {
  return Stdlib_Array.get(__x, 0);
}

function listToMayBe(__x) {
  return Stdlib_List.get(__x, 0);
}

var filter = Core__Option.filter;

var forEach = Core__Option.forEach;

var getExn = Core__Option.getExn;

var mapOr = Core__Option.mapOr;

var mapWithDefault = Core__Option.mapWithDefault;

var map = Core__Option.map;

var flatMap = Core__Option.flatMap;

var getOr = Core__Option.getOr;

var getWithDefault = Core__Option.getWithDefault;

var orElse = Core__Option.orElse;

var isSome = Core__Option.isSome;

var isNone = Core__Option.isNone;

var equal = Core__Option.equal;

var compare = Core__Option.compare;

var fromMaybe = Core__Option.getOr;

var A;

var L;

export {
  filter ,
  forEach ,
  getExn ,
  mapOr ,
  mapWithDefault ,
  map ,
  flatMap ,
  getOr ,
  getWithDefault ,
  orElse ,
  isSome ,
  isNone ,
  equal ,
  compare ,
  getExnWithMessage ,
  optionOr ,
  fromMaybe ,
  A ,
  arrayToMayBe ,
  L ,
  listToMayBe ,
}
/* Stdlib_Array Not a pure module */
