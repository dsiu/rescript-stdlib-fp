// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Primitive_object from "rescript/lib/es6/Primitive_object.js";
import * as TableclothComparator from "./TableclothComparator.mjs";

let compare = Primitive_object.compare;

let include = TableclothComparator.Make({
  compare: compare
});

function toCode(c) {
  return c;
}

function fromCode(i) {
  if (0 <= i && i <= 255) {
    return i;
  }
  
}

function toString(c) {
  return String.fromCharCode(c);
}

function fromString(str) {
  let match = str.length;
  if (match !== 1) {
    return;
  } else {
    return fromCode(str[0].charCodeAt(0) | 0);
  }
}

function toDigit(char) {
  if (char > 57 || char < 48) {
    return;
  } else {
    return char - /* '0' */48 | 0;
  }
}

function toLowercase(char) {
  if (char > 90 || char < 65) {
    return char;
  } else {
    return /* 'a' */97 + (char - /* 'A' */65 | 0) | 0;
  }
}

function toUppercase(char) {
  if (char > 122 || char < 97) {
    return char;
  } else {
    return /* 'A' */65 + (char - /* 'a' */97 | 0) | 0;
  }
}

function isLowercase(x) {
  return !(x > 122 || x < 97);
}

function isUppercase(x) {
  return !(x > 90 || x < 65);
}

function isLetter(x) {
  if (x >= 91) {
    return !(x > 122 || x < 97);
  } else {
    return x >= 65;
  }
}

function isDigit(x) {
  return !(x > 57 || x < 48);
}

function isAlphanumeric(x) {
  if (x > 90 || x < 48) {
    return !(x > 122 || x < 97);
  } else {
    return x > 64 || x < 58;
  }
}

function isPrintable(x) {
  return !(x > 126 || x < 32);
}

function isWhitespace(x) {
  if (x >= 14) {
    return x === 32;
  } else {
    return x >= 9;
  }
}

let equal = Primitive_object.equal;

let compare$1 = Primitive_object.compare;

let comparator = include.comparator;

export {
  fromCode,
  fromString,
  isLowercase,
  isUppercase,
  isLetter,
  isDigit,
  isAlphanumeric,
  isPrintable,
  isWhitespace,
  toLowercase,
  toUppercase,
  toCode,
  toString,
  toDigit,
  equal,
  compare$1 as compare,
  comparator,
}
/* include Not a pure module */
