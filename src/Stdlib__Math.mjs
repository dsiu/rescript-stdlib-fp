// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Caml_int32 from "rescript/lib/es6/caml_int32.js";
import * as Core__Math from "@rescript/core/src/Core__Math.mjs";

function gcd(_a, _b) {
  while(true) {
    var b = _b;
    var a = _a;
    if (a <= 0) {
      return b;
    }
    _b = a;
    _a = Caml_int32.mod_(b, a);
    continue ;
  };
}

function lcm(a, b) {
  return Caml_int32.div(Math.imul(a, b), gcd(a, b));
}

function gcd$1(_a, _b) {
  while(true) {
    var b = _b;
    var a = _a;
    if (!Caml_obj.greaterthan(a, BigInt(0))) {
      return b;
    }
    _b = a;
    _a = b % a;
    continue ;
  };
}

function lcm$1(a, b) {
  return a * b / gcd$1(a, b);
}

function max(a, b) {
  if (Caml_obj.greaterthan(a, b)) {
    return a;
  } else {
    return b;
  }
}

function min(a, b) {
  if (Caml_obj.lessthan(a, b)) {
    return a;
  } else {
    return b;
  }
}

var $$BigInt$1 = {
  $$BigInt: undefined,
  gcd: gcd$1,
  lcm: lcm$1,
  max: max,
  min: min
};

var Constants = Core__Math.Constants;

var Int = Core__Math.Int;

export {
  Constants ,
  Int ,
  gcd ,
  lcm ,
  $$BigInt$1 as $$BigInt,
}
/* No side effect */
