// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Array from "@rescript/core/src/Core__Array.mjs";
import * as TableclothArray from "tablecloth-rescript/src/TableclothArray.mjs";
import * as Stdlib_Array_Ext from "./Stdlib_Array_Ext.mjs";

var make = Core__Array.make;

var fromInitializer = Core__Array.fromInitializer;

var indexOfOpt = Core__Array.indexOfOpt;

var lastIndexOfOpt = Core__Array.lastIndexOfOpt;

var reduce = Core__Array.reduce;

var reduceWithIndex = Core__Array.reduceWithIndex;

var reduceRight = Core__Array.reduceRight;

var reduceRightWithIndex = Core__Array.reduceRightWithIndex;

var findIndexOpt = Core__Array.findIndexOpt;

var keepSome = Core__Array.keepSome;

var toShuffled = Core__Array.toShuffled;

var shuffle = Core__Array.shuffle;

var findMap = Core__Array.findMap;

var repeat = TableclothArray.repeat;

var range = TableclothArray.range;

var initialize = TableclothArray.initialize;

var fromList = TableclothArray.fromList;

var clone = TableclothArray.clone;

var get = TableclothArray.get;

var getAt = TableclothArray.getAt;

var set = TableclothArray.set;

var setAt = TableclothArray.setAt;

var first = TableclothArray.first;

var last = TableclothArray.last;

var slice = TableclothArray.slice;

var swap = TableclothArray.swap;

var reverse = TableclothArray.reverse;

var sort = TableclothArray.sort;

var isEmpty = TableclothArray.isEmpty;

var length = TableclothArray.length;

var any = TableclothArray.any;

var all = TableclothArray.all;

var count = TableclothArray.count;

var find = TableclothArray.find;

var findIndex = TableclothArray.findIndex;

var includes = TableclothArray.includes;

var minimum = TableclothArray.minimum;

var maximum = TableclothArray.maximum;

var extent = TableclothArray.extent;

var sum = TableclothArray.sum;

var map = TableclothArray.map;

var mapWithIndex = TableclothArray.mapWithIndex;

var filter = TableclothArray.filter;

var filterMap = TableclothArray.filterMap;

var flatMap = TableclothArray.flatMap;

var fold = TableclothArray.fold;

var foldRight = TableclothArray.foldRight;

var flatten = TableclothArray.flatten;

var map2 = TableclothArray.map2;

var map3 = TableclothArray.map3;

var partition = TableclothArray.partition;

var splitAt = TableclothArray.splitAt;

var splitWhen = TableclothArray.splitWhen;

var unzip = TableclothArray.unzip;

var forEach = TableclothArray.forEach;

var forEachWithIndex = TableclothArray.forEachWithIndex;

var values = TableclothArray.values;

var intersperse = TableclothArray.intersperse;

var chunksOf = TableclothArray.chunksOf;

var sliding = TableclothArray.sliding;

var join = TableclothArray.join;

var groupBy = TableclothArray.groupBy;

var toList = TableclothArray.toList;

var toIndexedList = TableclothArray.toIndexedList;

var equal = TableclothArray.equal;

var compare = TableclothArray.compare;

var append = Stdlib_Array_Ext.append;

var headUnsafe = Stdlib_Array_Ext.headUnsafe;

var lastUnsafe = Stdlib_Array_Ext.lastUnsafe;

var tail = Stdlib_Array_Ext.tail;

var init = Stdlib_Array_Ext.init;

var uncons = Stdlib_Array_Ext.uncons;

var singleton = Stdlib_Array_Ext.singleton;

var makeBy = Stdlib_Array_Ext.makeBy;

var take = Stdlib_Array_Ext.take;

var takeExactly = Stdlib_Array_Ext.takeExactly;

var takeWhile = Stdlib_Array_Ext.takeWhile;

var drop = Stdlib_Array_Ext.drop;

var dropExactly = Stdlib_Array_Ext.dropExactly;

var dropWhile = Stdlib_Array_Ext.dropWhile;

var tails = Stdlib_Array_Ext.tails;

var zip = Stdlib_Array_Ext.zip;

var uniqBy = Stdlib_Array_Ext.uniqBy;

var uniq = Stdlib_Array_Ext.uniq;

var scanl = Stdlib_Array_Ext.scanl;

var arrayToOption = Stdlib_Array_Ext.arrayToOption;

var $$return = Stdlib_Array_Ext.$$return;

var liftM2 = Stdlib_Array_Ext.liftM2;

var combinationIf2 = Stdlib_Array_Ext.combinationIf2;

var combination2 = Stdlib_Array_Ext.combination2;

var combinationIf3 = Stdlib_Array_Ext.combinationIf3;

var combinationArray3 = Stdlib_Array_Ext.combinationArray3;

var combinationIf4 = Stdlib_Array_Ext.combinationIf4;

var combination4 = Stdlib_Array_Ext.combination4;

export {
  make ,
  fromInitializer ,
  indexOfOpt ,
  lastIndexOfOpt ,
  reduce ,
  reduceWithIndex ,
  reduceRight ,
  reduceRightWithIndex ,
  findIndexOpt ,
  keepSome ,
  toShuffled ,
  shuffle ,
  findMap ,
  repeat ,
  range ,
  initialize ,
  fromList ,
  clone ,
  get ,
  getAt ,
  set ,
  setAt ,
  first ,
  last ,
  slice ,
  swap ,
  reverse ,
  sort ,
  isEmpty ,
  length ,
  any ,
  all ,
  count ,
  find ,
  findIndex ,
  includes ,
  minimum ,
  maximum ,
  extent ,
  sum ,
  map ,
  mapWithIndex ,
  filter ,
  filterMap ,
  flatMap ,
  fold ,
  foldRight ,
  flatten ,
  map2 ,
  map3 ,
  partition ,
  splitAt ,
  splitWhen ,
  unzip ,
  forEach ,
  forEachWithIndex ,
  values ,
  intersperse ,
  chunksOf ,
  sliding ,
  join ,
  groupBy ,
  toList ,
  toIndexedList ,
  equal ,
  compare ,
  append ,
  headUnsafe ,
  lastUnsafe ,
  tail ,
  init ,
  uncons ,
  singleton ,
  makeBy ,
  take ,
  takeExactly ,
  takeWhile ,
  drop ,
  dropExactly ,
  dropWhile ,
  tails ,
  zip ,
  uniqBy ,
  uniq ,
  scanl ,
  arrayToOption ,
  $$return ,
  liftM2 ,
  combinationIf2 ,
  combination2 ,
  combinationIf3 ,
  combinationArray3 ,
  combinationIf4 ,
  combination4 ,
}
/* TableclothArray Not a pure module */
