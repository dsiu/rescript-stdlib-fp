// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/rescript-jest/src/jest.mjs";
import * as Stdlib_Float from "../src/Stdlib_Float.mjs";
import * as Stdlib_String from "../src/Stdlib_String.mjs";
import * as Stdlib_Tuple3 from "../src/Stdlib_Tuple3.mjs";

Jest.test("make", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.make(3, 4, 5)), [
                    3,
                    4,
                    5
                  ]);
      }));

Jest.test("first", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.first([
                            3,
                            4,
                            5
                          ])), 3);
      }));

Jest.test("second", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.second([
                            3,
                            4,
                            5
                          ])), 4);
      }));

Jest.test("third", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.third([
                            3,
                            4,
                            5
                          ])), 5);
      }));

Jest.test("initial", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.initial([
                            3,
                            4,
                            5
                          ])), [
                    3,
                    4
                  ]);
      }));

Jest.test("tail", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.tail([
                            3,
                            4,
                            5
                          ])), [
                    4,
                    5
                  ]);
      }));

Jest.test("mapFirst", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.mapFirst([
                            "stressed",
                            16,
                            false
                          ], Stdlib_String.reverse)), [
                    "desserts",
                    16,
                    false
                  ]);
      }));

Jest.test("mapSecond", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.mapSecond([
                            "stressed",
                            16,
                            false
                          ], Stdlib_Float.squareRoot)), [
                    "stressed",
                    4,
                    false
                  ]);
      }));

Jest.test("mapThird", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.mapThird([
                            "stressed",
                            16,
                            false
                          ], (function (prim) {
                              return !prim;
                            }))), [
                    "stressed",
                    16,
                    true
                  ]);
      }));

Jest.test("mapEach", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.mapEach([
                            "stressed",
                            16,
                            false
                          ], Stdlib_String.reverse, Stdlib_Float.squareRoot, (function (prim) {
                              return !prim;
                            }))), [
                    "desserts",
                    4,
                    true
                  ]);
      }));

Jest.test("mapAll", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.mapAll([
                            "was",
                            "stressed",
                            "now"
                          ], Stdlib_String.reverse)), [
                    "saw",
                    "desserts",
                    "won"
                  ]);
      }));

Jest.test("rotateLeft", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.rotateLeft([
                            3,
                            4,
                            5
                          ])), [
                    4,
                    5,
                    3
                  ]);
      }));

Jest.test("rotateRight", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.rotateRight([
                            3,
                            4,
                            5
                          ])), [
                    5,
                    3,
                    4
                  ]);
      }));

Jest.test("toArray", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.toArray([
                            3,
                            4,
                            5
                          ])), [
                    3,
                    4,
                    5
                  ]);
      }));

Jest.test("toList", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Stdlib_Tuple3.toList([
                            3,
                            4,
                            5
                          ])), {
                    hd: 3,
                    tl: {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    }
                  });
      }));

export {
  
}
/*  Not a pure module */
